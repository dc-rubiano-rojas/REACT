{"ast":null,"code":"var _jsxFileName = \"/Users/danielcamilorubianorojas/Documents/REACTJS/react-taskapp-localstorage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport TaskCreator from \"./components/TaskCreator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskItems, setTaskItem] = useState([{\n    name: \"My first task\",\n    done: false\n  }, {\n    name: \"My second task\",\n    done: false\n  }, {\n    name: \"My third task\",\n    done: false\n  }]);\n\n  function createTask() {\n    alert('creating...');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TaskCreator, {\n      createTask: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskItems.map(task => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: task.name\n          }, task.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GlpU4ZlCfloqi8z1mkNrTZ0xSdw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","TaskCreator","App","taskItems","setTaskItem","name","done","createTask","alert","map","task"],"sources":["/Users/danielcamilorubianorojas/Documents/REACTJS/react-taskapp-localstorage/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nimport TaskCreator from \"./components/TaskCreator\";\n\nfunction App() {\n  const [taskItems, setTaskItem] = useState([\n    { name: \"My first task\", done: false },\n    { name: \"My second task\", done: false },\n    { name: \"My third task\", done: false },\n  ]);\n\n  function createTask() {\n    alert('creating...')\n  }\n\n  return (\n    <div className=\"App\">\n      <TaskCreator createTask={createTask}/>\n\n      {\n        <table>\n          <thead>\n            <tr>Tasks</tr>\n          </thead>\n          <tbody>\n            {taskItems.map((task) => {\n              return (\n                <tr key={task.name}>{task.name}</tr>\n              );\n            })}\n          </tbody>\n        </table>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BJ,QAAQ,CAAC,CACxC;IAAEK,IAAI,EAAE,eAAR;IAAyBC,IAAI,EAAE;EAA/B,CADwC,EAExC;IAAED,IAAI,EAAE,gBAAR;IAA0BC,IAAI,EAAE;EAAhC,CAFwC,EAGxC;IAAED,IAAI,EAAE,eAAR;IAAyBC,IAAI,EAAE;EAA/B,CAHwC,CAAD,CAAzC;;EAMA,SAASC,UAAT,GAAsB;IACpBC,KAAK,CAAC,aAAD,CAAL;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,WAAD;MAAa,UAAU,EAAED;IAAzB;MAAA;MAAA;MAAA;IAAA,QADF,eAII;MAAA,wBACE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAA,UACGJ,SAAS,CAACM,GAAV,CAAeC,IAAD,IAAU;UACvB,oBACE;YAAA,UAAqBA,IAAI,CAACL;UAA1B,GAASK,IAAI,CAACL,IAAd;YAAA;YAAA;YAAA;UAAA,QADF;QAGD,CAJA;MADH;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA/BQH,G;;KAAAA,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}