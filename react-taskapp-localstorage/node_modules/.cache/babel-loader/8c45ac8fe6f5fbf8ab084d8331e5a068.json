{"ast":null,"code":"var _jsxFileName = \"/Users/danielcamilorubianorojas/Documents/REACTJS/react-taskapp-localstorage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TaskCreator from \"./components/TaskCreator\";\nimport { TaskTable } from \"./components/TaskTable\";\nimport { VisibilityControl } from \"./components/VisibilityControl\";\nimport { Container } from \"./components/Container\";\nimport { TaskBanner } from \"./components/TaskBanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskItems, setTaskItem] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(false);\n\n  function createTask(taskName) {\n    if (!taskItems.find(task => task.name === taskName)) {\n      setTaskItem([...taskItems, {\n        name: taskName,\n        done: false\n      }]);\n    }\n  }\n\n  const toogleTask = task => {\n    setTaskItem(taskItems.map(tsk => task.name === tsk.name ? { ...tsk,\n      done: !tsk.done\n    } : tsk));\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"tasks\");\n\n    if (data) {\n      setTaskItem(JSON.parse(data));\n    }\n  }, []);\n\n  const cleanTask = () => {\n    setTaskItem(taskItems.filter(task => !task.done));\n    setShowCompleted(false);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(taskItems));\n  }, [taskItems]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"bg-dark vh-100 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(TaskBanner, {\n      userName: userName,\n      taskItems: taskItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(TaskCreator, {\n        createTask: createTask,\n        number: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n        tasks: taskItems,\n        toogleTask: toogleTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VisibilityControl, {\n        isChecked: showCompleted,\n        setShowCompleted: checked => setShowCompleted(checked),\n        cleanTask: cleanTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), showCompleted && /*#__PURE__*/_jsxDEV(TaskTable, {\n        tasks: taskItems,\n        toogleTask: toogleTask,\n        showCompleted: showCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v98s0T0S58rWhJtGm6vs3NUjM+A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TaskCreator","TaskTable","VisibilityControl","Container","TaskBanner","App","taskItems","setTaskItem","showCompleted","setShowCompleted","createTask","taskName","find","task","name","done","toogleTask","map","tsk","data","localStorage","getItem","JSON","parse","cleanTask","filter","setItem","stringify","userName","checked"],"sources":["/Users/danielcamilorubianorojas/Documents/REACTJS/react-taskapp-localstorage/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport TaskCreator from \"./components/TaskCreator\";\nimport { TaskTable } from \"./components/TaskTable\";\nimport { VisibilityControl } from \"./components/VisibilityControl\";\nimport { Container } from \"./components/Container\";\nimport { TaskBanner } from \"./components/TaskBanner\";\n\n\nfunction App() {\n  const [taskItems, setTaskItem] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(false);\n\n  function createTask(taskName) {\n    if (!taskItems.find((task) => task.name === taskName)) {\n      setTaskItem([...taskItems, { name: taskName, done: false }]);\n    }\n  }\n\n  const toogleTask = (task) => {\n    setTaskItem(\n      taskItems.map((tsk) =>\n        task.name === tsk.name ? { ...tsk, done: !tsk.done } : tsk\n      )\n    );\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"tasks\");\n    if (data) {\n      setTaskItem(JSON.parse(data));\n    }\n  }, []);\n\n  const cleanTask = () => {\n    setTaskItem(taskItems.filter((task) => !task.done));\n    setShowCompleted(false);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(taskItems));\n  }, [taskItems]);\n\n  return (\n    <main className=\"bg-dark vh-100 text-white\">\n      <TaskBanner userName={userName} taskItems={taskItems} />\n      <Container>\n        <TaskCreator createTask={createTask} number={30} />\n        <TaskTable tasks={taskItems} toogleTask={toogleTask} />\n        <VisibilityControl\n          isChecked={showCompleted}\n          setShowCompleted={(checked) => setShowCompleted(checked)}\n          cleanTask={cleanTask}\n        />\n\n        {showCompleted && (\n          <TaskTable\n            tasks={taskItems}\n            toogleTask={toogleTask}\n            showCompleted={showCompleted}\n          />\n        )}\n      </Container>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,yBAA3B;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;;EAEA,SAASY,UAAT,CAAoBC,QAApB,EAA8B;IAC5B,IAAI,CAACL,SAAS,CAACM,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcH,QAAvC,CAAL,EAAuD;MACrDJ,WAAW,CAAC,CAAC,GAAGD,SAAJ,EAAe;QAAEQ,IAAI,EAAEH,QAAR;QAAkBI,IAAI,EAAE;MAAxB,CAAf,CAAD,CAAX;IACD;EACF;;EAED,MAAMC,UAAU,GAAIH,IAAD,IAAU;IAC3BN,WAAW,CACTD,SAAS,CAACW,GAAV,CAAeC,GAAD,IACZL,IAAI,CAACC,IAAL,KAAcI,GAAG,CAACJ,IAAlB,GAAyB,EAAE,GAAGI,GAAL;MAAUH,IAAI,EAAE,CAACG,GAAG,CAACH;IAArB,CAAzB,GAAuDG,GADzD,CADS,CAAX;EAKD,CAND;;EAQAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;;IACA,IAAIF,IAAJ,EAAU;MACRZ,WAAW,CAACe,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAX;IACD;EACF,CALQ,EAKN,EALM,CAAT;;EAOA,MAAMK,SAAS,GAAG,MAAM;IACtBjB,WAAW,CAACD,SAAS,CAACmB,MAAV,CAAkBZ,IAAD,IAAU,CAACA,IAAI,CAACE,IAAjC,CAAD,CAAX;IACAN,gBAAgB,CAAC,KAAD,CAAhB;EACD,CAHD;;EAKAV,SAAS,CAAC,MAAM;IACdqB,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAerB,SAAf,CAA9B;EACD,CAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;EAIA,oBACE;IAAM,SAAS,EAAC,2BAAhB;IAAA,wBACE,QAAC,UAAD;MAAY,QAAQ,EAAEsB,QAAtB;MAAgC,SAAS,EAAEtB;IAA3C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA,wBACE,QAAC,WAAD;QAAa,UAAU,EAAEI,UAAzB;QAAqC,MAAM,EAAE;MAA7C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,SAAD;QAAW,KAAK,EAAEJ,SAAlB;QAA6B,UAAU,EAAEU;MAAzC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,iBAAD;QACE,SAAS,EAAER,aADb;QAEE,gBAAgB,EAAGqB,OAAD,IAAapB,gBAAgB,CAACoB,OAAD,CAFjD;QAGE,SAAS,EAAEL;MAHb;QAAA;QAAA;QAAA;MAAA,QAHF,EASGhB,aAAa,iBACZ,QAAC,SAAD;QACE,KAAK,EAAEF,SADT;QAEE,UAAU,EAAEU,UAFd;QAGE,aAAa,EAAER;MAHjB;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GAxDQH,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}