{"ast":null,"code":"var _jsxFileName = \"/Users/danielcamilorubianorojas/Documents/REACTJS/react-taskapp-localstorage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [newTaskName, setNewTaskName] = useState();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a new task\",\n      onChange: e => setNewTaskName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => alert(\"clicked: \", newTaskName),\n      children: \"Save task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Example() {\n  _s();\n\n  // And now you can use hooks\n  // But only inside your functional component's\n  // body\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Example, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c2 = Example;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"names":["useState","newTaskName","setNewTaskName","App","e","target","value","alert","Example","count","setCount"],"sources":["/Users/danielcamilorubianorojas/Documents/REACTJS/react-taskapp-localstorage/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nconst [newTaskName, setNewTaskName] = useState();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter a new task\"\n        onChange={(e) => setNewTaskName(e.target.value)}\n      />\n      <button onClick={() => alert(\"clicked: \", newTaskName)}>Save task</button>\n    </div>\n  );\n}\n\nfunction Example() {\n  // And now you can use hooks\n  // But only inside your functional component's\n  // body\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n} \n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;AAEA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCF,QAAQ,EAA9C;;AAEA,SAASG,GAAT,GAAe;EACb,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,kBAFd;MAGE,QAAQ,EAAGC,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;IAHjC;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAQ,OAAO,EAAE,MAAMC,KAAK,CAAC,WAAD,EAAcN,WAAd,CAA5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KAXQE,G;;AAaT,SAASK,OAAT,GAAmB;EAAA;;EACjB;EACA;EACA;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;EAEA,oBACE;IAAA,wBACE;MAAA,2BAAgBS,KAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAdQD,O;;MAAAA,O;AAgBT,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}